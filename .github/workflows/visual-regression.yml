name: Visual Regression Tests

on:
  pull_request:
    branches: [ main, develop, feature/* ]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to capture'
        required: false
        type: number
      capture_baseline:
        description: 'Capture new baselines'
        required: false
        type: boolean
        default: false

jobs:
  visual-test:
    # Run on issue comment with /test visual command
    if: |
      github.event_name == 'pull_request' || 
      github.event_name == 'workflow_dispatch' ||
      (github.event.issue.pull_request && contains(github.event.comment.body, '/test visual'))
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Start game server
      run: |
        npm run dev &
        sleep 5
      
    - name: Wait for server
      run: npx wait-on http://localhost:3000 -t 30000
    
    - name: Capture baseline (if requested)
      if: github.event.inputs.capture_baseline == 'true'
      run: npm run visual:capture-baseline
    
    - name: Capture issue screenshot (if issue number provided)
      if: github.event.inputs.issue_number
      run: |
        echo "${{ github.event.inputs.issue_number }}" | npm run visual:capture-issue
      env:
        ISSUE_NUMBER: ${{ github.event.inputs.issue_number }}
    
    - name: Run visual regression tests
      if: github.event_name == 'pull_request'
      run: npm run test:visual
      continue-on-error: true
    
    - name: Upload screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: visual-test-results-${{ github.run_number }}
        path: |
          test-visual/screenshots/regression/
          test-visual/screenshots/issues/
          test-visual/reports/
        retention-days: 30
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## üì∏ Visual Test Results\n\n';
          
          // Check if regression report exists
          const reportPath = 'test-visual/reports/latest.json';
          if (fs.existsSync(reportPath)) {
            const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
            
            if (report.passed) {
              comment += '‚úÖ All visual tests passed!\n\n';
            } else {
              comment += '‚ö†Ô∏è Visual differences detected\n\n';
              comment += `- Failed: ${report.failed}\n`;
              comment += `- Passed: ${report.passed}\n`;
              comment += `- Total: ${report.total}\n\n`;
              comment += 'Check the artifacts for detailed results.\n';
            }
          } else {
            comment += 'Visual tests completed. Check artifacts for screenshots.\n';
          }
          
          comment += `\n[View Test Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Comment on issue (for /test visual command)
      if: github.event_name == 'issue_comment'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚úÖ Visual tests completed! [View results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
          });
    
    - name: Fail if visual tests failed
      if: github.event_name == 'pull_request'
      run: |
        if [ -f "test-visual/reports/latest.json" ]; then
          PASSED=$(jq -r '.passed' test-visual/reports/latest.json)
          if [ "$PASSED" != "true" ]; then
            echo "‚ùå Visual regression tests failed"
            exit 1
          fi
        fi